#Used for testing Nashpy on some reward matrices

import nashpy as nash
import numpy as np

A = [[  0,    0,    0,    0],
[  40,  -40 ,  40 ,  40],
 [ 100,  100 ,-100 , 100],
 [  20,   20 ,  20 , -20]]
C = [[0, -1, 1], [-1, 0, 1], [-1, 0, 1]]
B = [[-0., 0.], [40., -40.]]
D = [[0,0,0],[0,0,0],[0,0,0]]
E = [[-100.,  100.],
 [ 100., -100.]]
F = [[ 0., -0., -0., -0.],
 [-0.,  0., -0., -0.],
 [-0., -0.,  0., -0.],
 [-0., -0., -0.,  0.]]
G = [[-107. ,         107.74477958],
 [   2.25522042,   -3.        ]]
H = [[-7,7,7],[14,-14,14],[1,1,-1]]
I = [[ 7.01427469,  9.01427469,  9.01427469,  9.01427469],
 [14.55037937, 12.55037937, 14.55037937, 14.55037937],
 [ 9.01427469,  9.01427469,  7.01427469,  9.01427469],
 [30.,         30.,         30.,         30.,        ]]
J = [[-6.66666667e+01, -1.66666667e+01, -1.66666667e+01, -1.66666667e+01],
 [-7.81250000e-01, -5.07812500e+01, -7.81250000e-01, -7.81250000e-01],
 [-1.66666667e+01, -1.66666667e+01, -6.66666667e+01, -1.66666667e+01],
 [ 9.97727273e+02,  9.97727273e+02,  9.97727273e+02, -5.22727273e+01]]
K = [[1,2,3],[4,5,6],[7,8,9]]
L = [[-0.32987, 1.67013, 1.67013],[8.77616174, -3.22383826, 8.77616174],[3.4263337,3.4263337,-0.5736663]]

security_game = nash.Game(K)

print(security_game)

equilibria = security_game.vertex_enumeration()
equilibria = security_game.support_enumeration()
equilibria = security_game.lemke_howson_enumeration()

print(len(list(equilibria)))
for eq in equilibria:
	print(eq)
	print(security_game[eq])